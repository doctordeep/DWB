@import "elements.scss";
$blue: #235699;
$bluelight: #3bb6e4;
$white: #ffffff;
$green: #d0c50d;
$lightgreen: #c1f7e8;
$lightred: #f87056;

.visualCaptcha {
  margin-bottom: 20px;
  min-height: 120px;
  @media only screen and (min-width: 750px) {
    margin-bottom: 50px;
  }

  & * {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }

  .audioField {
    font-size: 15px;
    color: #495e62;
    font-weight: 100;
    padding: 5px;
    border: 1px solid $bluelight;
    height: 40px;
    width: 100%;
    @include rounded(4px);
    @media only screen and (max-width: 360px) {
      margin-bottom: 15px;
    }
    @media only screen and (min-width: 360px) {
      width: 240px;
      float: left;
    }
  }
}

.accessibility-description,
.visualCaptcha-explanation,
.status.valid {
  @include rounded(7px);
  background-color: $lightgreen;
  padding: 10px;
  text-align: center;
  font-family: 'Oxygen', sans-serif;
  font-size: 18px;
  color: #219589;
  font-weight: 100;
  margin: 20px 0 24px;
  @media only screen and (max-width: 360px) {
    font-size: 16px;
  }
}


.visualCaptcha-possibilities,
.visualCaptcha-refresh-button,
.visualCaptcha-accessibility-button,
.visualCaptcha-button-group {
  display: inline-block;
}


.visualCaptcha-possibilities {
  vertical-align: middle;
  @media only screen and (min-width: 750px) {
    margin-right: 15px;
  }
  .img {
    padding: 4px;
    border: 1px solid $white;
    display: inline-block;

    @media only screen and (min-width: 750px) {
      padding: 10px;
      border: 3px solid $white;
    }
  }
  img {
    width: 32px;
    height: 32px;
    z-index: 5;

    transition: all 200ms;
    -webkit-transition: all 200ms;

    &:hover {
      cursor: pointer;
    }
  }

  .visualCaptcha-button-group {
    @media only screen and (max-width: 360px) {
      text-align: center;
      margin-top: 15px;
    }
    @media only screen and (min-width: 750px) {
      float: right;
    }
  }

  .visualCaptcha-selected {
    background-color: $lightgreen;
    @include rounded(4px);
    padding: 4px;
    border: 1px dashed #099a9f;

    @media only screen and (min-width: 750px) {
      padding: 10px;
      border: 3px dashed #099a9f;
    }
  }
}

.visualCaptcha-refresh-button {
  padding: 9px 10px 7px;
  margin: 0 5px;
  background-color: $lightred;
  border: 1px solid $lightred;
  @include rounded(100px);
  img {
    width: 16px;
    height: 16px;
  }

  &:hover {
    cursor: pointer;
  }
}

.visualCaptcha-accessibility-button {
  padding: 9px 10px 7px;
  border: 1px solid black;

  img {
    width: 16px;
    height: 16px;
  }


  @include rounded(100px);
  &:hover {
    cursor: pointer;
  }
}

/* Animations for hiding/showing accessibility option and images */
@-webkit-keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}
@-webkit-keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}
@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

div.visualCaptcha .visualCaptcha-show {
  -webkit-animation: fadeIn 300ms;
  animation: fadeIn 300ms;
}

div.visualCaptcha .visualCaptcha-hide {
  display: none !important;

  -webkit-animation: fadeOut 300ms;
  animation: fadeOut 300ms;
}
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.

.container-fluid {
  @include container-fixed();
}


// Row
//
// Rows contain and clear the floats of your columns.

.row {
  @include make-row();
}


// Columns
//
// Common styles for small and large grid columns

@include make-grid-columns();


// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

@include make-grid(xs);


// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.

@media (min-width: $screen-sm-min) {
  @include make-grid(sm);
}


// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.

@media (min-width: $screen-md-min) {
  @include make-grid(md);
}


// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.

@media (min-width: $screen-lg-min) {
  @include make-grid(lg);
}
